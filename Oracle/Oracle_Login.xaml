<Activity mc:Ignorable="sap sap2010" x:Class="Oracle_LoginToOracle" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ss="clr-namespace:System.Security;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LoginRetryInterval" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="in_LoginNumberOfRetries" Type="InArgument(x:Int32)" />
    <x:Property Name="in_OracleCredentialsAsset" Type="InArgument(x:String)" />
    <x:Property Name="in_ElementExistsTimeout" Type="InArgument(x:Int32)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_OracleLoginSelectorTitle" Type="InArgument(x:String)" />
    <x:Property Name="in_OracleHomepageSelectorTitle" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>975,2683</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Oracle_LoginToOracle_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="DESCRIPTION: Login to Oracle.&#xA;&#xA;PRE-CONDITION: All previous Oracle sessions must have been terminated.&#xA;&#xA;POST-ACTION: If in the case that the bot was able to login successfully, the bot will be able to navigate to the Java screen. If in case the bot is not able to login, the error message will be captured by the bot and an exception email will be sent to the robot support team." DisplayName="Oracle_LoginToOracle" sap:VirtualizedContainerService.HintSize="985,2618" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="NextPageExists" />
      <Variable x:TypeArguments="x:String" Name="Username" />
      <Variable x:TypeArguments="ss:SecureString" Name="Password" />
      <Variable x:TypeArguments="x:String" Name="LoginFailedErrorMessage" />
      <Variable x:TypeArguments="x:Boolean" Name="ErrorMessageBoxExists" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetOracleCredentials" sap:VirtualizedContainerService.HintSize="943,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\GetAppCredentials.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Username">[Username]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Credential">[in_OracleCredentialsAsset]</InArgument>
        <OutArgument x:TypeArguments="ss:SecureString" x:Key="out_Password">[Password]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope: Login to Oracle" sap:VirtualizedContainerService.HintSize="943,1235" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="[in_LoginNumberOfRetries]" RetryInterval="[in_LoginRetryInterval]">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="476,970" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="434,22" sap2010:WorkflowViewState.IdRef="KillProcess_2" ProcessName="chrome" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Open Oracle Workflow" sap:VirtualizedContainerService.HintSize="434,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Oracle\Oracle_Open.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_OracleURL">[in_Config("General_OracleURL").ToString]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_OpenOracleNumberOfRetries">[Convert.ToInt32(in_Config("OpenOracleAndLogin_NumberOfRetries").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_OpenOracleRetryInterval">[TimeSpan.ParseExact(in_Config("OpenOracleAndLogin_RetryInterval").ToString,in_Config("IntervalFormat").ToString,System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="in_ElementExistsTimeout">[Convert.ToInt32(in_Config("OpenBrowserTimeout").ToString)]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="in_OracleLoginSelector">[in_Config("OracleLoginSelectorTitle").ToString]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'Oracel Login page'" sap:VirtualizedContainerService.HintSize="434,664" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="f2550d96252d628f5d91cd6950098eb3" Selector="[&quot;&lt;html app='chrome.exe' title='&quot;+in_OracleLoginSelectorTitle+&quot;' /&gt;&quot;]">
              <ui:BrowserScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,518" sap2010:WorkflowViewState.IdRef="Sequence_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="False" DisplayName="Type Into 'Username'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="True" Text="[Username]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="38097724-f66d-4021-952d-3b6b0583b81d" InformativeScreenshot="5c92860a1295dc0a4da02bd2e8b72d63" Selector="&lt;webctrl tag='INPUT' aaname='User Name' /&gt;" WaitForReady="INTERACTIVE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                    <ui:TypeSecureText DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="False" DisplayName="Type Secure Text 'Password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[Password]" SendWindowMessages="False" SimulateType="True">
                      <ui:TypeSecureText.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="90d54252-82cb-43b0-a033-43c652b060f1" InformativeScreenshot="7ef12ac6ed265bde06ea119601fac187" Selector="&lt;webctrl tag='INPUT' aaname='Password' /&gt;" WaitForReady="NONE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeSecureText.Target>
                    </ui:TypeSecureText>
                    <ui:Click CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" AlterIfDisabled="True" ClickType="CLICK_SINGLE" DisplayName="Click 'Login'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="True">
                      <ui:Click.CursorPosition>
                        <ui:CursorPosition Position="Center">
                          <ui:CursorPosition.OffsetX>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetX>
                          <ui:CursorPosition.OffsetY>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:CursorPosition.OffsetY>
                        </ui:CursorPosition>
                      </ui:Click.CursorPosition>
                      <ui:Click.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a4229263-54d1-442a-8b97-1c6a80afabb5" InformativeScreenshot="d3cef38701fd0efef3fdd9c0b1120a4e" Selector="&lt;webctrl aaname='Log In' tag='BUTTON' /&gt;" WaitForReady="NONE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:Click.Target>
                    </ui:Click>
                  </Sequence>
                </ActivityAction>
              </ui:BrowserScope.Body>
            </ui:BrowserScope>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <ui:UiElementExists DisplayName="Element Exists 'Homepage'" Exists="[NextPageExists]" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="75948119-360c-44ab-95db-8990591f1b8c" InformativeScreenshot="b84bd5ba6ddcb7d568c52054e0d2f2ee" Selector="[&quot;&lt;html app='chrome.exe' title='&quot;+in_OracleHomepageSelectorTitle+&quot;' /&gt;&lt;webctrl tag='H1' aaname='Home' /&gt;&quot;]" TimeoutMS="[in_ElementExistsTimeout]" WaitForReady="INTERACTIVE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
        </ActivityFunc>
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <If Condition="[NextPageExists]" DisplayName="If the next page has been opened" sap:VirtualizedContainerService.HintSize="943,997" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Init state: Login success, Bot was able to log in successfully.&quot;]" />
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Throw Init System Exception" sap:VirtualizedContainerService.HintSize="584,848.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="561.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Init State: Login Error, next page has not been found.&quot;]" />
          <ui:UiElementExists DisplayName="Element Exists 'ErrorMessageBox'" Exists="[ErrorMessageBoxExists]" sap:VirtualizedContainerService.HintSize="561.6,107.2" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7cbf3681-2692-4e57-b6f4-78dfb06c12f6" InformativeScreenshot="2d70490832fa345622edd4f95eafc696" Selector="[&quot;&lt;html title='&quot;+in_OracleLoginSelectorTitle+&quot;' /&gt;&lt;webctrl id='errorBox' tag='DIV' /&gt;&quot;]" TimeoutMS="[in_ElementExistsTimeout]" WaitForReady="INTERACTIVE" />
            </ui:UiElementExists.Target>
          </ui:UiElementExists>
          <If Condition="[ErrorMessageBoxExists]" DisplayName="If ErrorBox pops up" sap:VirtualizedContainerService.HintSize="561.6,444" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence DisplayName="ErrorBox does exist" sap:VirtualizedContainerService.HintSize="336.8,294.4" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text 'Login Fail ErrorMessage'" sap:VirtualizedContainerService.HintSize="314.4,107.2" sap2010:WorkflowViewState.IdRef="GetValue_1">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="aa948dd1-92cb-4699-95ec-4557fc9f0387" InformativeScreenshot="2d70490832fa345622edd4f95eafc696" Selector="[&quot;&lt;html title='&quot;+in_OracleLoginSelectorTitle+&quot;' /&gt;&lt;webctrl id='errorBox' tag='DIV' /&gt;&quot;]" WaitForReady="INTERACTIVE">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                    </ui:Target>
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[LoginFailedErrorMessage]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
                <Throw DisplayName="Throw login failed system exception (Wrong credentials)" Exception="[new System.Exception(LoginFailedErrorMessage)]" sap:VirtualizedContainerService.HintSize="314.4,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Throw DisplayName="Throw login failed system exception (Next page not found)" Exception="[new System.Exception(&quot;The Login homepage has not been opened in sufficient time.&quot;)]" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="Throw_2" />
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>