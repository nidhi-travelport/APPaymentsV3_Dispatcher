<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="OrchestratorQueueName" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>924,1194</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Main2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <StateMachine InitialState="{x:Reference __ReferenceID3}" sap2010:Annotation.AnnotationText="-- ReFrameWork - Robotic Enterprise Framework --&#xA;-- AP Bot Performer V2.0--" DisplayName="General Business Process" sap:VirtualizedContainerService.HintSize="934,1129" sap2010:WorkflowViewState.IdRef="StateMachine_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">70,12.5</av:Point>
        <x:Double x:Key="StateContainerWidth">900</x:Double>
        <x:Double x:Key="StateContainerHeight">1051</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">130,76.25 160,76.25 160,78.05 325.6,78.05</av:PointCollection>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <State x:Name="__ReferenceID0" sap2010:Annotation.AnnotationText="Description: Retrieving the transaction data from the queue.&#xA;&#xA;Pre-Condition:  Oracle must be open&#xA;&#xA;Post-Action: The transaction item will be taken from the queue and procssed, if no data has been found, the process will be ended and Oracle will be closed" DisplayName="Get TransactionItem from Queue" sap:VirtualizedContainerService.HintSize="344,220" sap2010:WorkflowViewState.IdRef="State_4">
      <State.Entry>
        <Sequence sap2010:Annotation.AnnotationText="Data retrieval mechanism. The TransactionNumber variable holds the current transaction number. Incrementing this number means getting the next transaction. For a robot retry, the number is not increased, in case of application exception, until the max retry number.&#xA;TransactionItem type needs to be changed accordingly." DisplayName="Retrieve Data" sap:VirtualizedContainerService.HintSize="901,698" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Boolean" Name="ShouldStop" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ShouldStop DisplayName="Check Stop Signal" sap:VirtualizedContainerService.HintSize="859,22" sap2010:WorkflowViewState.IdRef="ShouldStop_1" Result="[ShouldStop]" />
          <If Condition="[ShouldStop]" DisplayName="Should Stop or Get Next" sap:VirtualizedContainerService.HintSize="859,487" sap2010:WorkflowViewState.IdRef="If_8">
            <If.Then>
              <Sequence DisplayName="Orchestrator stop requested" sap:VirtualizedContainerService.HintSize="376,283" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Stop message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_25" Level="Info" Message="[&quot;Stop process requested&quot;]" />
                <Assign DisplayName="End Process" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TryCatch DisplayName="Try GetTransactionData" sap:VirtualizedContainerService.HintSize="438,339" sap2010:WorkflowViewState.IdRef="TryCatch_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke GetTransactionData workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\GetTransactionData.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                      <OutArgument x:TypeArguments="ui:QueueItem" x:Key="out_TransactionItem">[TransactionItem]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField1">[TransactionField1]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionField2">[TransactionField2]</OutArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="out_TransactionID">[TransactionID]</OutArgument>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_TransactionData">[TransactionData]</InOutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Log exception message and End process" sap:VirtualizedContainerService.HintSize="376,66" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Fatal" Message="[Config(&quot;LogMessage_GetTransactionDataError&quot;).ToString+TransactionNumber.ToString+&quot;. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                        <Assign DisplayName="End Process" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:QueueItem">[TransactionItem]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:QueueItem">[Nothing]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </If.Else>
          </If>
        </Sequence>
      </State.Entry>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">367.6,325.2</av:Point>
          <av:Size x:Key="ShapeSize">344,220</av:Size>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Double x:Key="StateContainerWidth">310.39999999999992</x:Double>
          <x:Double x:Key="StateContainerHeight">52.400000000000205</x:Double>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State.Transitions>
        <Transition sap2010:Annotation.AnnotationText="This is a simple mecanism to stop the process.&#xA;In reallife scenario you can stop the process when there is no more data to process or on a schedule." DisplayName="No Data" sap:VirtualizedContainerService.HintSize="450,564" sap2010:WorkflowViewState.IdRef="Transition_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">367.6,512.2 168.9,512.2 168.9,454.6</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">65</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">35</x:Int32>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.To>
            <State x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="Post-Action: The process will be terminated, the daily &amp; validation log files will be send to the business and Oracle will be closed." DisplayName="End Process" sap:VirtualizedContainerService.HintSize="218,155" sap2010:WorkflowViewState.IdRef="State_1" IsFinal="True">
              <State.Entry>
                <TryCatch sap:VirtualizedContainerService.HintSize="1069,3443" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                  <TryCatch.Try>
                    <Sequence DisplayName="End of process activities" sap:VirtualizedContainerService.HintSize="1031,3216" sap2010:WorkflowViewState.IdRef="Sequence_20">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="FinalDailyLogDataTable" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="989,282" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,204" sap2010:WorkflowViewState.IdRef="Sequence_68">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Excel_ConsolidateData workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_36" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Excel_ConsolidateData.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_InputFolderPath">[Config("General_BotOutputFolder").ToString+Config("APOutputFilePath").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_LocalTempPath">[Config("General_LocalTempPath").ToString]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_OutputFileName">[Config("APFileName").ToString.Replace("Entity",System.DateTime.Now.ToString(Config("Datestamp").ToString))]</InArgument>
                                <OutArgument x:TypeArguments="x:String" x:Key="out_InvoiceDetailReportPath">[InvoiceDetailReportPath]</OutArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <Sequence DisplayName="Check if daily log is empty" sap:VirtualizedContainerService.HintSize="989,1395" sap2010:WorkflowViewState.IdRef="Sequence_41">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[FinalDailyLogDataTable]" DisplayName="Read Range daily log file path" sap:VirtualizedContainerService.HintSize="947,87" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Sheet1" WorkbookPath="[DailyLogFilePath]" />
                        <If Condition="[FinalDailyLogDataTable Is Nothing Or FinalDailyLogDataTable.Rows.Count.Equals(0)]" DisplayName="If daily log file is empty" sap:VirtualizedContainerService.HintSize="947,1176" sap2010:WorkflowViewState.IdRef="If_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Daily Log file is empty" sap:VirtualizedContainerService.HintSize="376,245" sap2010:WorkflowViewState.IdRef="Sequence_40">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;End Process State: &quot;+ DailyLogFilePath+&quot; is empty so it will be deleted and not sent to business.&quot;]" />
                              <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete daily log file path" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delete_4" Path="[DailyLogFilePath]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Move Daily Log and send it to business" sap:VirtualizedContainerService.HintSize="526,1028" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:Boolean" Name="DailyLogQDriveExists" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:PathExists DisplayName="Path Exists" Exists="[DailyLogQDriveExists]" sap:VirtualizedContainerService.HintSize="484,89" sap2010:WorkflowViewState.IdRef="PathExists_4" Path="[Config(&quot;General_BotOutputFolder&quot;).ToString  + Config(&quot;DailyLog_FilePath&quot;).ToString]" PathType="Folder" />
                              <If Condition="[DailyLogQDriveExists]" DisplayName="If Q-Drive Daily Log folder exists" sap:VirtualizedContainerService.HintSize="484,227" sap2010:WorkflowViewState.IdRef="If_15">
                                <If.Else>
                                  <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[Config(&quot;General_BotOutputFolder&quot;).ToString  + Config(&quot;DailyLog_FilePath&quot;).ToString]" />
                                </If.Else>
                              </If>
                              <Assign DisplayName="Assign Q-Drive Daily filepath" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[DailyLogNewFilePath]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Config("General_BotOutputFolder").ToString  + Config("DailyLog_FilePath").ToString + Config("DailyLog_FileName").ToString + Date.Now.ToString(Config("Datestamp").ToString) + Config("Log_FileExtension").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Log will be moved from &quot; + DailyLogFilePath + &quot; to &quot; + DailyLogNewFilePath]" />
                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[DailyLogNewFilePath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="484,157" sap2010:WorkflowViewState.IdRef="MoveFile_3" Overwrite="True" Path="[DailyLogFilePath]" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Daily log to Business" sap:VirtualizedContainerService.HintSize="484,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Outlook_SendEmail.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToEmailAddress">[Config("SendDailyLog_To").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("SendEmail_DailyLog_Subject").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">["Timestamp: " + Date.Now.ToString(Config("LogDatestamp").ToString)]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Account">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_SentOnBehalf">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Bcc">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Cc">[Config("SendDailyLog_CC").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogAttachment">[DailyLogNewFilePath]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceDetailReport" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <Sequence DisplayName="Move CRR to Performer Folder" sap:VirtualizedContainerService.HintSize="989,1063" sap2010:WorkflowViewState.IdRef="Sequence_42">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataTable" Name="FinalValidationLogDataTable" />
                          <Variable x:TypeArguments="x:Boolean" Name="CRRTempPathExists" />
                          <Variable x:TypeArguments="x:String" Name="CRRNewFilePath" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:PathExists DisplayName="Path Exists" Exists="[CRRTempPathExists]" sap:VirtualizedContainerService.HintSize="571,89" sap2010:WorkflowViewState.IdRef="PathExists_12" Path="[CRRTempPath]" PathType="File" />
                        <Assign DisplayName="Assign Q-Drive Daily filepath" sap:VirtualizedContainerService.HintSize="571,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[CRRNewFilePath]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String" xml:space="preserve">[Config("General_BotOutputFolder").ToString  + Config("CRRLog_FilePath").ToString + Config("CRRLogFileName").ToString + Date.Now.ToString(Config("Datestamp").ToString) + Config("Log_FileExtension").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="571,91" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;Log will be moved from &quot; + CRRTempPath + &quot; to &quot; + CRRNewFilePath]" />
                        <If Condition="[CRRTempPathExists]" DisplayName="If CRR Temp Path Exists" sap:VirtualizedContainerService.HintSize="571,611" sap2010:WorkflowViewState.IdRef="If_26">
                          <If.Then>
                            <Sequence DisplayName="Move Send CRR and send it to business" sap:VirtualizedContainerService.HintSize="426,463" sap2010:WorkflowViewState.IdRef="Sequence_67">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:MoveFile ContinueOnError="{x:Null}" Destination="[CRRNewFilePath]" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="384,157" sap2010:WorkflowViewState.IdRef="MoveFile_2" Overwrite="True" Path="[CRRTempPath]" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Daily log to Business" sap:VirtualizedContainerService.HintSize="384,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_35" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Outlook_SendEmail.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_ToEmailAddress">[Config("SendCRRLog_To").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("SendEmail_CRRLog_Subject").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">["Timestamp: " + Date.Now.ToString(Config("LogDatestamp").ToString)]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Account">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_SentOnBehalf">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Bcc">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Cc">[Config("SendCRRLog_CC").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogAttachment">[CRRNewFilePath]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceDetailReport">[InvoiceDetailReportPath]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:Delete ContinueOnError="True" sap:VirtualizedContainerService.HintSize="384,22" sap2010:WorkflowViewState.IdRef="Delete_5" Path="[InvoiceDetailReportPath]" />
                            </Sequence>
                          </If.Then>
                        </If>
                      </Sequence>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke CloseAllApplications workflow" sap:VirtualizedContainerService.HintSize="989,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\CloseAllApplications.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Open &amp; Close Outlook workflow" sap:VirtualizedContainerService.HintSize="989,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_33" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Outlook_OpenAndCloseOutlook.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InArgument x:TypeArguments="x:TimeSpan" x:Key="in_Delay">[TimeSpan.ParseExact(Config("OpenAndCloseOutlook_Delay").ToString,Config("IntervalFormat").ToString,System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1035,21" sap2010:WorkflowViewState.IdRef="Catch`1_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,335" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Warn" Message="[&quot;Applications failed to close normally. &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="in_frmservletFilePath">[Config("frmservletFilePath").ToString]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_javalauncher">jp2launcher</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="in_chrome">chrome</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </Sequence>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">70.8,299.6</av:Point>
                  <av:Size x:Key="ShapeSize">218,155</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">183.99999999999997</x:Double>
                  <x:Double x:Key="StateContainerHeight">31.600000000000421</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Variables>
                <Variable x:TypeArguments="x:String" Name="InvoiceDetailReportPath" />
              </State.Variables>
            </State>
          </Transition.To>
          <Transition.Action>
            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_23" Level="Info" Message="[&quot;Process finished due to no more transaction data&quot;]" />
          </Transition.Action>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="TransactionItem Is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
          </Transition.Condition>
        </Transition>
        <Transition DisplayName="New Transaction" sap2010:WorkflowViewState.IdRef="Transition_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:PointCollection x:Key="ConnectorLocation">539.6,545.2 539.6,575.2 540,575.2 540,652.8</av:PointCollection>
              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Transition.Condition>
            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="TransactionItem IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
          </Transition.Condition>
          <Transition.To>
            <State x:Name="__ReferenceID2" sap2010:Annotation.AnnotationText="Description: The responsibility of the transaction is choosed and then gets processed using the flowchart which dictates how the item is processed based on the run type.&#xA;&#xA;Pre-Condition:  Transaction item must have been picked up from the queue and be ready to be processed.&#xA;&#xA;Post-Action: &#xA;-&gt; The transaction will be processed successfully with no issues&#xA;-&gt; A business error might occur which means that the transaction will be retired and a new transaction is taken for process. &#xA;-&gt; System error might occur which will kill the process and will invoke the Init Workflow." DisplayName="Process The Queue Item" sap:VirtualizedContainerService.HintSize="428,280" sap2010:WorkflowViewState.IdRef="State_3">
              <State.Entry>
                <TryCatch DisplayName="Process Transaction" sap:VirtualizedContainerService.HintSize="438,652" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <TryCatch.Try>
                    <Sequence DisplayName="Process the current TransactionItem" sap:VirtualizedContainerService.HintSize="376,403" sap2010:WorkflowViewState.IdRef="Sequence_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[&quot;hello&quot;]" />
                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="ui:BusinessRuleException">[Nothing]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke ProcessTransaction workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Process.xaml">
                        <ui:InvokeWorkflowFile.Arguments>
                          <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_DailyLogDataTable">[DailyLogDataTable]</InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogFilePath">[DailyLogFilePath]</InArgument>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_ValidationLogDataTable" />
                          <InArgument x:TypeArguments="x:String" x:Key="in_ValidationLogFilePath" />
                          <InArgument x:TypeArguments="x:Int32" x:Key="in_TransactionNumber">[TransactionNumber]</InArgument>
                          <InArgument x:TypeArguments="sd:DataTable" x:Key="in_dtCRR">[DtCRR]</InArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_CRRTempPath">[CRRTempPath]</InArgument>
                          <OutArgument x:TypeArguments="x:String" x:Key="out_InvoiceNoOracle">[InvoiceNoOracle]</OutArgument>
                        </ui:InvokeWorkflowFile.Arguments>
                      </ui:InvokeWorkflowFile>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="ui:BusinessRuleException">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Set transaction status to Rule Exception" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="ui:BusinessRuleException">[BusinessRuleException]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="ui:BusinessRuleException">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                        <Assign DisplayName="Set transaction status to SystemError" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                          <Assign.To>
                            <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                  <TryCatch.Finally>
                    <TryCatch DisplayName="Set the Transaction Status and go to next Transaction" sap:VirtualizedContainerService.HintSize="438,339" sap2010:WorkflowViewState.IdRef="TryCatch_6">
                      <TryCatch.Try>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke SetTransactionStatus workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\SetTransactionStatus.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                            <InArgument x:TypeArguments="ui:BusinessRuleException" x:Key="in_BusinessRuleException">[BusinessRuleException]</InArgument>
                            <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[TransactionItem]</InArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_RetryNumber">[RetryNumber]</InOutArgument>
                            <InOutArgument x:TypeArguments="x:Int32" x:Key="io_TransactionNumber">[TransactionNumber]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField1">[TransactionField1]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionField2">[TransactionField2]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TransactionID">[TransactionID]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogFilePath">[DailyLogFilePath]</InArgument>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_DailyLogDataTable">[DailyLogDataTable]</InOutArgument>
                            <InArgument x:TypeArguments="s:Exception" x:Key="in_SystemException">[SystemError]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceNoOracle">[InvoiceNoOracle]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                      </TryCatch.Try>
                      <TryCatch.Catches>
                        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ActivityAction x:TypeArguments="s:Exception">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                            </ActivityAction.Argument>
                            <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_24" Level="Fatal" Message="[&quot;SetTransactionStatus.xaml failed: &quot;+exception.Message+&quot; at Source: &quot;+exception.Source]" />
                          </ActivityAction>
                        </Catch>
                      </TryCatch.Catches>
                    </TryCatch>
                  </TryCatch.Finally>
                </TryCatch>
              </State.Entry>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">326,652.8</av:Point>
                  <av:Size x:Key="ShapeSize">428,280</av:Size>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Double x:Key="StateContainerWidth">393.6</x:Double>
                  <x:Double x:Key="StateContainerHeight">37.200000000000671</x:Double>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <State.Transitions>
                <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">454.4,932.8 454.4,1007 850,1007 850,122.65 760.6,122.65</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">23</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_4" />
                  </Transition.Condition>
                  <Transition.To>
                    <State x:Name="__ReferenceID3" sap2010:Annotation.AnnotationText="Description: Invoke the InitAllSettings workflow, Check if latest Config.xlsx exists in Q Drive folder and then copy over from Q drive. Clear the Environment, Create Daily &amp; Validation Log files, open Oracle application&#xA;&#xA;Pre-Condition:  Check if Config.xlsx does exists in Q drive location, Make sure that queue items have been added to the queue by the dispatcher&#xA;&#xA;Post-Action: The Config.xlsx file will be copied over to Local Data folder and initialised, Environment will be cleared, Daily &amp; Validation log files will be created and Oracle will have been opened." DisplayName="Initialise Oracle Java Application" sap:VirtualizedContainerService.HintSize="435,223" sap2010:WorkflowViewState.IdRef="State_2">
                      <State.Entry>
                        <TryCatch DisplayName="Catch intialization exceptions" sap:VirtualizedContainerService.HintSize="1451,5154" sap2010:WorkflowViewState.IdRef="TryCatch_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch.Try>
                            <Sequence DisplayName="Init State" sap:VirtualizedContainerService.HintSize="1413,4927" sap2010:WorkflowViewState.IdRef="Sequence_4">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Initialize SystemError" sap:VirtualizedContainerService.HintSize="1371,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="s:Exception">[Nothing]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Sequence DisplayName="Move Config from Q-Drive" sap:VirtualizedContainerService.HintSize="1371,1057" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="ui:GenericValue" Name="LocalConfigLocation" />
                                  <Variable x:TypeArguments="ui:GenericValue" Default="[&quot;Data\Config.xlsx&quot;]" Name="ConfigFileDefault" />
                                  <Variable x:TypeArguments="x:Boolean" Name="QDriveConfigExists" />
                                  <Variable x:TypeArguments="x:String" Name="APConfigFilePath" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="APPaymentsPerformerV3_ConfigFile" DisplayName="Get Q-Drive asset" sap:VirtualizedContainerService.HintSize="855,137" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                  <ui:GetRobotAsset.Value>
                                    <OutArgument x:TypeArguments="x:String">[APConfigFilePath]</OutArgument>
                                  </ui:GetRobotAsset.Value>
                                </ui:GetRobotAsset>
                                <ui:PathExists DisplayName="Path Exists" Exists="[QDriveConfigExists]" sap:VirtualizedContainerService.HintSize="855,89" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[APConfigFilePath]" PathType="File" />
                                <If Condition="[QDriveConfigExists]" DisplayName="If a new Config exists in Share point" sap:VirtualizedContainerService.HintSize="855,659" sap2010:WorkflowViewState.IdRef="If_10">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence DisplayName="Copy Config from Q-Drive" sap:VirtualizedContainerService.HintSize="476,511" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Init State: Config will be copied over from the Q-Drive: &quot; + ConfigFileDefault]" />
                                      <ui:CopyFile ContinueOnError="{x:Null}" Destination="[ConfigFileDefault]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[APConfigFilePath]" />
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,91" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[&quot;Init State: Config has successfully been copied over from the Q-Drive&quot;]" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Init State: The local config will be used.&quot;]" />
                                  </If.Else>
                                </If>
                              </Sequence>
                              <If Condition="[Config is Nothing]" DisplayName="If first run - read Config file" sap:VirtualizedContainerService.HintSize="1371,3486" sap2010:WorkflowViewState.IdRef="If_1">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="First Run" sap:VirtualizedContainerService.HintSize="1226,3338" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitAllSettings workflow" sap:VirtualizedContainerService.HintSize="1184,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Data\Config.xlsx</InArgument>
                                        <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings", "Constants", "Selectors"}]</InArgument>
                                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[Config]</OutArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Sequence sap2010:Annotation.AnnotationText="Save job arguments with values to Config, using the argument's name as keyname. " DisplayName="Save job arguments Config" sap:VirtualizedContainerService.HintSize="1184,138" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[Not string.IsNullOrEmpty(OrchestratorQueueName)]" DisplayName="OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="641,260" sap2010:WorkflowViewState.IdRef="If_9">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Add OrchestratorQueueName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[Config("OrchestratorQueueName")]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[OrchestratorQueueName]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                        <If.Else>
                                          <ui:Comment sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// If the argument has no value, do not overwrite config. This provides backward compatibility with &lt; 2018.3 and allows default values to come from the Config.xlsx" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke KillAllProcesses workflow" sap:VirtualizedContainerService.HintSize="1184,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\KillAllProcesses.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_frmservletFilePath">[Config("frmservletFilePath").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_javalauncher">jp2launcher</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_chrome">chrome</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <Sequence DisplayName="Delete &amp; Create Temp folder" sap:VirtualizedContainerService.HintSize="1184,1317" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Boolean" Name="TempFolderExists" />
                                        <Variable x:TypeArguments="x:Boolean" Name="ValidationLogAlreadyExists" />
                                        <Variable x:TypeArguments="x:Boolean" Name="DailyLogAlreadyExists" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:PathExists DisplayName="Path Exists to check if temp folder exists" Exists="[TempFolderExists]" sap:VirtualizedContainerService.HintSize="713,89" sap2010:WorkflowViewState.IdRef="PathExists_6" Path="[Config(&quot;General_LocalTempPath&quot;).ToString]" PathType="Folder">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:PathExists>
                                      <Assign DisplayName="Assign DailyLogPath" sap:VirtualizedContainerService.HintSize="713,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[DailyLogFilePath]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Config("General_LocalTempPath").ToString+"\"+Config("DailyLog_FileName").ToString+Config("Log_FileExtension").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:PathExists DisplayName="Path Exists" Exists="[DailyLogAlreadyExists]" sap:VirtualizedContainerService.HintSize="713,89" sap2010:WorkflowViewState.IdRef="PathExists_8" Path="[DailyLogFilePath]" PathType="File" />
                                      <If Condition="[Not DailyLogAlreadyExists]" DisplayName="If none of the logs exist" sap:VirtualizedContainerService.HintSize="713,567" sap2010:WorkflowViewState.IdRef="If_20">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="526,419" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <If Condition="[TempFolderExists]" DisplayName="If temp folder exists" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_17">
                                              <If.Then>
                                                <ui:Delete ContinueOnError="{x:Null}" DisplayName="Delete Temp Folder" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[Config(&quot;General_LocalTempPath&quot;).ToString]" />
                                              </If.Then>
                                            </If>
                                            <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Temp Folder" sap:VirtualizedContainerService.HintSize="484,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[Config(&quot;General_LocalTempPath&quot;).ToString]" />
                                          </Sequence>
                                        </If.Then>
                                      </If>
                                      <If Condition="[not DailyLogAlreadyExists]" DisplayName="If Daily Log is missing create it" sap:VirtualizedContainerService.HintSize="713,260" sap2010:WorkflowViewState.IdRef="If_21">
                                        <If.Then>
                                          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Create Daily Log workflow" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Log\Log_CreateLog.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogFolder">[Config("General_LocalTempPath").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogFileName">[Config("DailyLog_FileName").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogFileExtension">[Config("Log_FileExtension").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_Datestamp">[Config("Datestamp").ToString]</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogHeadersList">[Config("DailyLog_HeadersList").ToString]</InArgument>
                                              <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_DailyLogDataTable">[DailyLogDataTable]</OutArgument>
                                              <OutArgument x:TypeArguments="x:String" x:Key="out_DailyLogFilePath">[DailyLogFilePath]</OutArgument>
                                              <InArgument x:TypeArguments="x:Boolean" x:Key="in_CreateLogBln">True</InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </If.Then>
                                        <If.Else>
                                          <ui:ReadRange AddHeaders="True" DataTable="[DailyLogDataTable]" DisplayName="Read Daily Log" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="[DailyLogFilePath]">
                                            <ui:ReadRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ReadRange.Range>
                                          </ui:ReadRange>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                    <ui:AddLogFields sap2010:Annotation.AnnotationText="Add BusinessProcessName" DisplayName="Add Log Fields" sap:VirtualizedContainerService.HintSize="1184,53" sap2010:WorkflowViewState.IdRef="AddLogFields_1">
                                      <ui:AddLogFields.Fields>
                                        <InArgument x:TypeArguments="x:String" x:Key="logF_BusinessProcessName">[Config("logF_BusinessProcessName").ToString]</InArgument>
                                      </ui:AddLogFields.Fields>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AddLogFields>
                                    <Sequence DisplayName="Read CRR for Performer Log" sap:VirtualizedContainerService.HintSize="1184,1314" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:String" Name="CRRDispatcherPath" />
                                        <Variable x:TypeArguments="x:Boolean" Name="CRRDispatcherPathExists" />
                                        <Variable x:TypeArguments="x:Boolean" Name="CRRTempPathExists" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="1142,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[CRRTempPath]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Config("General_LocalTempPath").ToString+"\"+Config("CRRLogFileName").ToString+Config("Log_FileExtension").ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:PathExists DisplayName="Path Exists" Exists="[CRRTempPathExists]" sap:VirtualizedContainerService.HintSize="1142,89" sap2010:WorkflowViewState.IdRef="PathExists_11" Path="[CRRTempPath]" PathType="File" />
                                      <If Condition="[CRRTempPathExists]" DisplayName="If CRR Temp Path Exists" sap:VirtualizedContainerService.HintSize="1142,993" sap2010:WorkflowViewState.IdRef="If_25">
                                        <If.Then>
                                          <ui:ReadRange AddHeaders="True" DataTable="[DtCRR]" DisplayName="Read Range CRR" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ReadRange_5" SheetName="Sheet1" WorkbookPath="[CRRTempPath]">
                                            <ui:ReadRange.Range>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </ui:ReadRange.Range>
                                          </ui:ReadRange>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence sap:VirtualizedContainerService.HintSize="763,845" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="721,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[CRRDispatcherPath]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[Config("General_BotOutputFolder").ToString+Config("BotCRRDispatcherFolder").ToString+"\"+Config("CRRLogFileName").ToString+".xlsx"]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:PathExists DisplayName="Path Exists" Exists="[CRRDispatcherPathExists]" sap:VirtualizedContainerService.HintSize="721,89" sap2010:WorkflowViewState.IdRef="PathExists_9" Path="[CRRDispatcherPath]" PathType="File" />
                                            <If Condition="[CRRDispatcherPathExists]" DisplayName="If CRR Path Exixts" sap:VirtualizedContainerService.HintSize="721,524" sap2010:WorkflowViewState.IdRef="If_23">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Copy CRR from Q-drive to Temp" sap:VirtualizedContainerService.HintSize="476,376" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:CopyFile ContinueOnError="{x:Null}" Destination="[CRRTempPath]" DisplayName="Copy CRR" sap:VirtualizedContainerService.HintSize="434,157" sap2010:WorkflowViewState.IdRef="CopyFile_4" Overwrite="True" Path="[CRRDispatcherPath]" />
                                                  <ui:ReadRange AddHeaders="True" DataTable="[DtCRR]" DisplayName="Read Range CRR" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="ReadRange_4" SheetName="Sheet1" WorkbookPath="[CRRTempPath]">
                                                    <ui:ReadRange.Range>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <Literal x:TypeArguments="x:String" Value="" />
                                                      </InArgument>
                                                    </ui:ReadRange.Range>
                                                  </ui:ReadRange>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Throw DisplayName="Throw CRR Log" Exception="[new SystemException(&quot;Couldn't find CRR Path: &quot;+CRRDispatcherPath)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                                              </If.Else>
                                            </If>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </Sequence>
                                </If.Then>
                              </If>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke InitiAllApplications workflow" sap:VirtualizedContainerService.HintSize="1371,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\InitAllApplications.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[Config]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                          </TryCatch.Try>
                          <TryCatch.Catches>
                            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="1417,21" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ActivityAction x:TypeArguments="s:Exception">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                </ActivityAction.Argument>
                                <Assign DisplayName="Assign excepton to SystemError" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[SystemError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </ActivityAction>
                            </Catch>
                          </TryCatch.Catches>
                        </TryCatch>
                      </State.Entry>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">325.6,0</av:Point>
                          <av:Size x:Key="ShapeSize">435,223</av:Size>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          <x:Double x:Key="StateContainerWidth">400.69743589743575</x:Double>
                          <x:Double x:Key="StateContainerHeight">25</x:Double>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <State.Transitions>
                        <Transition DisplayName="Success" sap:VirtualizedContainerService.HintSize="450,507" sap2010:WorkflowViewState.IdRef="Transition_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              <av:PointCollection x:Key="ConnectorLocation">543.1,223 543.1,253 539.6,253 539.6,325.2</av:PointCollection>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID0</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <ui:Comment sap:VirtualizedContainerService.HintSize="334,74" sap2010:WorkflowViewState.IdRef="Comment_1" Text="Default transition is picked up if there are no errors during initialization" />
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                          </Transition.Condition>
                        </Transition>
                        <Transition DisplayName="System Error" sap:VirtualizedContainerService.HintSize="604,1353" sap2010:WorkflowViewState.IdRef="Transition_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:PointCollection x:Key="ConnectorLocation">325.6,189.55 168.9,189.55 168.9,299.6</av:PointCollection>
                              <x:Int32 x:Key="SrcConnectionPointIndex">65</x:Int32>
                              <x:Int32 x:Key="DestConnectionPointIndex">34</x:Int32>
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Transition.To>
                            <x:Reference>__ReferenceID1</x:Reference>
                          </Transition.To>
                          <Transition.Action>
                            <Sequence DisplayName="Send System Error email" sap:VirtualizedContainerService.HintSize="501,958" sap2010:WorkflowViewState.IdRef="Sequence_26">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="459,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Fatal" Message="[&quot;System error at initialization: &quot; + SystemError.Message + &quot; at Source: &quot; + SystemError.Source]" />
                              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="459,735" sap2010:WorkflowViewState.IdRef="TryCatch_7">
                                <TryCatch.Variables>
                                  <Variable x:TypeArguments="x:String" Name="ExceptionScreenshotFilePath" />
                                </TryCatch.Variables>
                                <TryCatch.Try>
                                  <Sequence DisplayName="Send Email with Screenshot" sap:VirtualizedContainerService.HintSize="421,508" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Take Screenshot workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Framework\TakeScreenshot.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Folder">[Config("ExScreenshotsFolderPath").ToString]</InArgument>
                                        <InOutArgument x:TypeArguments="x:String" x:Key="io_FilePath">[ExceptionScreenshotFilePath]</InOutArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ScreenshotFileName">[Config("InitState_ExceptionScreenshot_FileName").ToString]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MoveExceptionScreenshot workflow" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="ExceptionScreenshots\ExceptionScreenshots_MoveScreenshot.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ExceptionScreenshotFilePath">[ExceptionScreenshotFilePath]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_QDriveOutput">[Config("General_BotOutputFolder").ToString + Config("ExceptionScreenshot_FilePath").ToString]</InArgument>
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Email" sap:VirtualizedContainerService.HintSize="379,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Outlook_SendEmail.xaml">
                                      <ui:InvokeWorkflowFile.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_ToEmailAddress">[Config("General_RPASupportMailbox").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("SendEmail_InitState_Subject").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">[Config("SendEmail_GeneralBeginning").ToString + vbNewLine + vbNewLine + Config("SendEmail_InitState_Beginning_Body").ToString+vbNewLine+vbNewLine+"Error: " + SystemError.Message + vbNewLine + "Source: " + SystemError.Source + "Timestamp: "+System.DateTime.Now().ToString(Config("LogDatestamp").ToString)+vbNewLine + "Notes: "+vbNewLine + Config("SendEmail_Ending").ToString]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Account">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_SentOnBehalf">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Bcc">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_Cc">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogAttachment" />
                                        <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceDetailReport" />
                                      </ui:InvokeWorkflowFile.Arguments>
                                    </ui:InvokeWorkflowFile>
                                  </Sequence>
                                </TryCatch.Try>
                                <TryCatch.Catches>
                                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="425,21" sap2010:WorkflowViewState.IdRef="Catch`1_8">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ActivityAction x:TypeArguments="s:Exception">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Send Email without Screenshot" sap:VirtualizedContainerService.HintSize="376,335" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Error occured when taking Screenshot, email will be send without screenshot&quot;]" />
                                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Send Email" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_32" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Common\Outlook_SendEmail.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_ToEmailAddress">[Config("General_RPASupportMailbox").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[Config("SendEmail_InitState_Subject").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_EmailBody">[Config("SendEmail_GeneralBeginning").ToString + vbNewLine + vbNewLine + Config("SendEmail_InitState_Beginning_Body").ToString+vbNewLine+vbNewLine+"Error: " + SystemError.Message + vbNewLine + "Source: " + SystemError.Source + "Timestamp: "+System.DateTime.Now().ToString(Config("LogDatestamp").ToString)+vbNewLine + "Notes: "+vbNewLine + Config("SendEmail_Ending").ToString]</InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Account">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_SentOnBehalf">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Bcc">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_Cc">
                                              <Literal x:TypeArguments="x:String" Value="" />
                                            </InArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="in_DailyLogAttachment" />
                                            <InArgument x:TypeArguments="x:String" x:Key="in_InvoiceDetailReport" />
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                      </Sequence>
                                    </ActivityAction>
                                  </Catch>
                                </TryCatch.Catches>
                              </TryCatch>
                            </Sequence>
                          </Transition.Action>
                          <Transition.Condition>
                            <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError isNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                          </Transition.Condition>
                        </Transition>
                      </State.Transitions>
                    </State>
                  </Transition.To>
                </Transition>
                <Transition DisplayName="Rule Exception" sap:VirtualizedContainerService.HintSize="450,505" sap2010:WorkflowViewState.IdRef="Transition_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">561.4,932.8 561.4,990 806,990 806,391.2 711.6,391.2</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">43</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">20</x:Int32>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="BusinessRuleException IsNot Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_1" />
                  </Transition.Condition>
                </Transition>
                <Transition sap2010:Annotation.AnnotationText="No need for any action here, in case of success simply go to next transaction" DisplayName="Success" sap:VirtualizedContainerService.HintSize="450,538" sap2010:WorkflowViewState.IdRef="Transition_5">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:PointCollection x:Key="ConnectorLocation">647,932.8 647,962.8 767,962.8 767,479.2 711.6,479.2</av:PointCollection>
                      <x:Int32 x:Key="SrcConnectionPointIndex">59</x:Int32>
                      <x:Int32 x:Key="DestConnectionPointIndex">52</x:Int32>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Transition.To>
                    <x:Reference>__ReferenceID0</x:Reference>
                  </Transition.To>
                  <Transition.Condition>
                    <mva:VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="SystemError Is Nothing And BusinessRuleException is Nothing" sap2010:WorkflowViewState.IdRef="VisualBasicValue`1_2" />
                  </Transition.Condition>
                </Transition>
              </State.Transitions>
              <State.Variables>
                <Variable x:TypeArguments="x:String" Name="InvoiceNoOracle" />
              </State.Variables>
            </State>
          </Transition.To>
        </Transition>
      </State.Transitions>
    </State>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <StateMachine.Variables>
      <Variable x:TypeArguments="ui:QueueItem" Name="TransactionItem" />
      <Variable x:TypeArguments="s:Exception" Name="SystemError" />
      <Variable x:TypeArguments="ui:BusinessRuleException" Name="BusinessRuleException" />
      <Variable x:TypeArguments="x:Int32" Default="1" Name="TransactionNumber" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="Config" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="RetryNumber" />
      <Variable x:TypeArguments="x:String" Name="TransactionField2" />
      <Variable x:TypeArguments="x:String" Name="TransactionField1" />
      <Variable x:TypeArguments="x:String" Name="TransactionID" />
      <Variable x:TypeArguments="sd:DataTable" Name="TransactionData" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="DailyLogDataTable" />
      <Variable x:TypeArguments="x:String" Name="DailyLogFilePath" />
      <Variable x:TypeArguments="x:String" Name="DailyLogNewFilePath" />
      <Variable x:TypeArguments="sd:DataTable" Name="DtCRR" />
      <Variable x:TypeArguments="x:String" Name="CRRTempPath" />
    </StateMachine.Variables>
  </StateMachine>
</Activity>